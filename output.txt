#include <klee/klee.h> 

int main() { 

//char* testCombo6(char a[], float b, function func);
char a[] = malloc(sizeof (char));
klee_make_symbolic(&a[], sizeof(a[]), "a[]");
float b = malloc(sizeof (float));
klee_make_symbolic(&b, sizeof(b), "b");
function func = malloc(sizeof (function));
klee_make_symbolic(&func, sizeof(func), "func");
testCombo6(a[], b, func);


//int testPtrs(struct foo *fooPtr, char* arr);
struct foo *fooPtr = malloc(sizeof (struct foo));
klee_make_symbolic(&fooPtr, sizeof(fooPtr), "fooPtr");
char* arr = malloc(sizeof (char));
klee_make_symbolic(&arr, sizeof(arr), "arr");
testPtrs(fooPtr, arr);


//int testStructPtr(struct foo *foo_ptr);
struct foo *foo_ptr = malloc(sizeof (struct foo));
klee_make_symbolic(&foo_ptr, sizeof(foo_ptr), "foo_ptr");
testStructPtr(foo_ptr);


//float testCombo3(struct foo *fooPtr, function func);
struct foo *fooPtr = malloc(sizeof (struct foo));
klee_make_symbolic(&fooPtr, sizeof(fooPtr), "fooPtr");
function func = malloc(sizeof (function));
klee_make_symbolic(&func, sizeof(func), "func");
testCombo3(fooPtr, func);


//int testFloat(float a);
float a = malloc(sizeof (float));
klee_make_symbolic(&a, sizeof(a), "a");
testFloat(a);


//int testFuncPtr (int a, function call_back, int b);
int a = malloc(sizeof (int));
klee_make_symbolic(&a, sizeof(a), "a");
function call_back = malloc(sizeof (function));
klee_make_symbolic(&call_back, sizeof(call_back), "call_back");
int b = malloc(sizeof (int));
klee_make_symbolic(&b, sizeof(b), "b");
testFuncPtr(a, call_back, b);


//float testVoidPtr(void *ptr);
void *ptr = malloc(sizeof (void));
klee_make_symbolic(&ptr, sizeof(ptr), "ptr");
testVoidPtr(ptr);


//int testCombo9(function func, void* ptr);
function func = malloc(sizeof (function));
klee_make_symbolic(&func, sizeof(func), "func");
void* ptr = malloc(sizeof (void));
klee_make_symbolic(&ptr, sizeof(ptr), "ptr");
testCombo9(func, ptr);


//int testCombo7(int a, char* b, char c[], struct foo *fooPtr);
int a = malloc(sizeof (int));
klee_make_symbolic(&a, sizeof(a), "a");
char* b = malloc(sizeof (char));
klee_make_symbolic(&b, sizeof(b), "b");
char c[] = malloc(sizeof (char));
klee_make_symbolic(&c[], sizeof(c[]), "c[]");
struct foo *fooPtr = malloc(sizeof (struct foo));
klee_make_symbolic(&fooPtr, sizeof(fooPtr), "fooPtr");
testCombo7(a, b, c[], fooPtr);


//char testDouble(double a);
double a = malloc(sizeof (double));
klee_make_symbolic(&a, sizeof(a), "a");
testDouble(a);


//int testPtr(char* ptr);
char* ptr = malloc(sizeof (char));
klee_make_symbolic(&ptr, sizeof(ptr), "ptr");
testPtr(ptr);


//int testPtrs(struct foo *fooPtr, char* arr);
struct foo *fooPtr = malloc(sizeof (struct foo));
klee_make_symbolic(&fooPtr, sizeof(fooPtr), "fooPtr");
char* arr = malloc(sizeof (char));
klee_make_symbolic(&arr, sizeof(arr), "arr");
testPtr(fooPtr, arr);


} 
